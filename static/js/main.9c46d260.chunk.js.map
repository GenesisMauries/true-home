{"version":3,"sources":["Components/Label.js","Firestoredb.js","Components/Property.js","App.js","serviceWorker.js","index.js"],"names":["Label","react_default","a","createElement","Row","Col","xs","Jumbotron","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","base","firestore","library","add","faTrash","faEdit","Property","state","items","inputName","inputAddress","inputItem","edit","id","fadeIn","message","changeValue","event","_this","setState","Object","defineProperty","target","name","value","action","_this$state","collection","address","item","then","catch","error","update","getData","doc","get","exists","data","alert","e","console","log","_this$state2","deleteData","delete","setTimeout","_this2","this","onSnapshot","snapShots","docs","map","_this3","Fragment","InputGroup","Input","placeholder","type","onChange","required","Button","color","onClick","Fade","in","tag","Table","hover","undefined","key","react_fontawesome_index_es","icon","Component","App","Container","Components_Property","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c46d260.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Jumbotron} from 'reactstrap';\r\n\r\nexport default()=>{\r\n    return(\r\n        <div>\r\n            <Row>\r\n                <Col xs='12'>\r\n                    <Jumbotron className='text-center'>\r\n                        <h1 className='display-5'>INMUEBLES RECIENTES</h1>\r\n                        <p className='lead'>Nosotros logramos que comprar sea un proceso Ã¡gil y profesional. </p>\r\n                    </Jumbotron>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Credenciales\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyDbnB68clKiG9Zec7f-jEqXrOPU5_5-g20\",\r\n    authDomain: \"true-home-4dcfb.firebaseapp.com\",\r\n    databaseURL: \"https://true-home-4dcfb.firebaseio.com\",\r\n    projectId: \"true-home-4dcfb\",\r\n    storageBucket: \"true-home-4dcfb.appspot.com\",\r\n    messagingSenderId: \"115760310833\"\r\n});\r\n\r\n// Variable de acceso a firestore\r\nlet base = firebase.firestore();\r\n\r\nexport default base;","import React, {Component} from 'react';\r\nimport base from '../Firestoredb';\r\nimport {Fade, Table, Button, Row, Col, InputGroup, Input} from 'reactstrap';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport '../App.css'\r\nlibrary.add(faTrash, faEdit)\r\n\r\nclass Property extends Component{\r\n    state={\r\n        items:[],\r\n        inputName:'',\r\n        inputAddress:'',\r\n        inputItem:'',\r\n        edit:false,\r\n        id:'',\r\n        fadeIn:false,\r\n        message:''\r\n    }\r\n    componentDidMount(){\r\n        base.collection('all').onSnapshot((snapShots) =>{\r\n            this.setState({\r\n                items:snapShots.docs.map((doc) =>{\r\n                    return{\r\n                        id:doc.id,\r\n                        data: doc.data()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    changeValue= (event ) =>{\r\n        // console.log(event.target.value)\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            \r\n        })\r\n    }\r\n    //Agrega \r\n    action= ()=>{\r\n        const{ inputAddress, inputName, edit, inputItem} = this.state;\r\n        if(edit === false){\r\n            base.collection('all').add({\r\n                name: inputName,\r\n                address: inputAddress,\r\n                item: inputItem\r\n            }).then(()=>{\r\n                this.message('Agregado');\r\n            }).catch((error)=>{\r\n                this.message(error);\r\n            })\r\n        }else{\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    //Edita\r\n    getData= (id)=>{\r\n      let ref= base.collection('all').doc(id);\r\n      ref.get().then((doc)=>{\r\n          if(doc.exists){\r\n              this.setState({\r\n                inputName: doc.data().name,\r\n                inputAddress: doc.data().address,\r\n                inputItem: doc.data().item,\r\n                edit:true,\r\n                id:doc.id\r\n                })\r\n            }else{\r\n                alert('El documento no existe');\r\n            }\r\n      }).catch((e)=>{\r\n          console.log(e);\r\n      })\r\n    }\r\n    update= ()=>{\r\n        const {id,inputName, inputAddress, inputItem} = this.state;\r\n        base.collection('all').doc(id).update({\r\n            name: inputName,\r\n            address: inputAddress,\r\n            item: inputItem\r\n        }).then(()=>{\r\n            this.message('Actualizado')\r\n            this.setState({\r\n                edit:false\r\n            })\r\n        }).catch((error)=>{\r\n            this.message(error)\r\n        })  \r\n    }\r\n\r\n    //Borra\r\n    deleteData= (id)=>{\r\n        base.collection('all').doc(id).delete()\r\n        this.message('Propiedad eliminada')\r\n    }\r\n\r\n    //Mensaje\r\n    message= (message)=>{\r\n        this.setState({\r\n            fadeIn: true,\r\n            message: message,\r\n            inputName:'',\r\n            inputAddress:'',\r\n            inputItem:''\r\n        })\r\n        setTimeout(()=> {\r\n            this.setState({\r\n                fadeIn: false,\r\n                message: ''\r\n            })\r\n            \r\n        },2000) \r\n    }\r\n    \r\n    render(){\r\n        const {items} = this.state;\r\n        return(\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col xs='10'>\r\n                        <InputGroup>\r\n                            <Input \r\n                            placeholder='Propietari@'\r\n                            type='text'\r\n                            name='inputName'\r\n                            value={this.state.inputName}\r\n                            onChange={this.changeValue}\r\n                            className='address'\r\n                            required\r\n                            />\r\n                            <Input \r\n                            placeholder='Domicilio'\r\n                            type='text'\r\n                            name='inputAddress'\r\n                            value={this.state.inputAddress}\r\n                            onChange={this.changeValue}\r\n                            className='address'\r\n                            required\r\n                            />\r\n                            <Input \r\n                            placeholder='Valor'\r\n                            type='number'\r\n                            name='inputItem'\r\n                            value={this.state.inputItem}\r\n                            onChange={this.changeValue}\r\n                            required\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col xs='2'>\r\n                        <div className='text-right'>\r\n                            <Button color='info' onClick={this.action}>\r\n                                {this.state.edit ? 'Editar': 'Agregar'}\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Fade in={this.state.fadeIn} tag='h6' className='mt-3 text-center text-success'>\r\n                    {this.state.message}\r\n                </Fade>\r\n                <Table hover className='text-center mt-5'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Domicilio</th>\r\n                            <th>Valor</th>\r\n                            <th>Editar</th>\r\n                            <th>Eliminar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items && items !== undefined ? items.map((item, key)=>\r\n                        <tr key={key}>\r\n                            <td>{item.data.name}</td>\r\n                             <td>{item.data.address}</td>\r\n                            <td>{'$'+item.data.item}</td>\r\n                            <td>\r\n                                <Button color='warning' onClick={()=>this.getData(item.id)}> \r\n                                    <FontAwesomeIcon icon=\"edit\" />\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button color='danger' onClick={()=>this.deleteData(item.id)}>\r\n                                    <FontAwesomeIcon icon=\"trash\" />\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        ) \r\n                        : <span>Null</span>}\r\n                    </tbody>\r\n                </Table>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Property;","import React, { Component } from 'react';\nimport {Container} from 'reactstrap';\nimport Label from './Components/Label';\nimport Property from './Components/Property';\nimport './App.css'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Label />\n          <Property />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}